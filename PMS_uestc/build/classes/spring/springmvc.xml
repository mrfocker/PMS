<<<<<<< HEAD
<?xml version="1.0" encoding="UTF-8"?>
=======
<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="    
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 本配置文件是工名为mvc-dispatcher的DispatcherServlet使用，为其提供相应的SpringMVC配置 -->
	<!-- 启用Spring基于annotation的DI，激活注解 -->
	<context:annotation-config />

	<!-- DispatcherServlet上下文，只搜索@Controller标注的类，不搜索其他标注的类 -->
	<context:component-scan base-package="cn.pms.ssm.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- Default Servlet Handler (For Resources *.css, *.js, image,..) -->
	<mvc:default-servlet-handler />
    
	<!-- 静态资源处理，css,js,imgs -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<mvc:resources mapping="/img/**" location="/WEB-INF/pages/img/" />
	<mvc:resources mapping="/js/**" location="/WEB-INF/pages/js/" />
	<mvc:resources mapping="/css/**" location="/WEB-INF/pages/css/" />
	<mvc:resources mapping="/pages/**" location="/WEB-INF/pages/" />
	
	<!-- <mvc:resources mapping="/resources/PaperFile/**" location="/WEB-INF/resources/PaperFile" /> -->

	<!-- HandlerMapping无需配置，默认启动DefaultAnnotationHandlerMapping annotation-driven 
		HandlerMapping -->

	<context:component-scan
		base-package="cn.pms.ssm.service cn.pms.ssm.service.impl cn.pms.ssm.controller" />
		
	<!-- 扩充注解驱动，可将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />

	<!--启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 处理器映射器 将bean的那么作为url进行查找，需要在配置Handler时指定beanname（url） -->
	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	<!-- 处理器适配器 所以处理器适配器都实现HandlerAdapter接口 -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />

	<!-- 注册拦截器 -->
	<!-- <mvc:interceptors> <mvc:interceptor> <mvc:mapping path="/**"/> <bean 
		class="cn.pms.ssm.interceptor.LoginInterceptor"></bean> </mvc:interceptor> 
		</mvc:interceptors> -->
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="52428800" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true" />
	</bean> 

	<!-- 设置freeMarker的配置文件路径 -->
	<bean id="freemarkerConfiguration"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
	</bean>

	<!-- freemarker config for FreeMarkerViewResolver -->
<!--     <bean id="freemarkerConfig"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="exposeRequestAttributes" value="true" />
		<property name="exposeSessionAttributes" value="true" />
		<property name="viewClass">
			<value>org.springframework.web.servlet.view.freemarker.FreeMarkerView
			</value>
		</property>
		<property name="cache">
			<value>true</value>
		</property>
        <property name="templateLoaderPath" value="/freemarker/" />
        <property name="defaultEncoding" value="GBK" />
        <property name="freemarkerVariables">
            <map>
                <entry key="extends" value-ref="extendsDirective"></entry>
                <entry key="override" value-ref="overrideDirective"></entry>
                <entry key="block" value-ref="blockDirective"></entry>
                <entry key="super" value-ref="superDirective"></entry>
            </map>
        </property>
        <property name="contentType">
			<value>text/html; charset=UTF-8</value>
		</property>
        <property name="prefix" value="/WEB-INF/pages"></property>
		<property name="suffix" value=".jsp"/>
    </bean> -->
    
	<!--<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/pages/"></property>
		<property name="suffix" value=".jsp"/>
	</bean>-->
	
	<bean id="tilesViewResolver"
		class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<property name="viewClass">
			<value>
				org.springframework.web.servlet.view.tiles2.TilesView
			</value>
		</property>
	</bean>
	<bean id="tilesConfigurer"
		class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<list>
				<value>/WEB-INF/tiles/tiles-definitions.xml</value>
			</list>
		</property>
	</bean>
	
	 
</beans>
>>>>>>> jj_branch
