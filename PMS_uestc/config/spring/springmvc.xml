<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="    
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans.xsd  
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context.xsd
            http://www.springframework.org/schema/mvc 
            http://www.springframework.org/schema/mvc/spring-mvc.xsd">
	<!-- 本配置文件是工名为mvc-dispatcher的DispatcherServlet使用，为其提供相应的SpringMVC配置 -->
	<!-- 启用Spring基于annotation的DI，激活注解 -->
	<context:annotation-config />

	<!-- DispatcherServlet上下文，只搜索@Controller标注的类，不搜索其他标注的类 -->
	<context:component-scan base-package="cn.pms.ssm.controller">
		<context:include-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>

	<!-- HandlerMapping无需配置，默认启动DefaultAnnotationHandlerMapping annotation-driven 
		HandlerMapping -->
	<!-- 扩充注解驱动，可将请求参数绑定到控制器参数 -->
	<mvc:annotation-driven />

	<context:component-scan
		base-package="cn.pms.ssm.service cn.pms.ssm.service.impl cn.pms.ssm.controller" />
	<!-- 静态资源处理，css,js,imgs -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- <mvc:default-servlet-handler/> -->
	<!--启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<!-- 处理器映射器 将bean的那么作为url进行查找，需要在配置Handler时指定beanname（url） -->
	<bean
		class="org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping" />
	<!-- 处理器适配器 所以处理器适配器都实现HandlerAdapter接口 -->
	<bean
		class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />
	<!-- 配置ViewResolver可以用多个ViewResolver，使用order属性，InternalResourceViewResolver放在最后 -->
	<!-- <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver"> 
		<property name="mediaTypes"> <map> <entry key="json" value="application/json"/> 
		<entry key="xml" value="application/xml"/> <entry key="htm" value="text/html"/> 
		</map> </property> <property name="defaultViews"> <list> <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView"> 
		</bean> </list> </property> <property name="ignoreAcceptHeader" value="true"/> 
		</bean> -->
	<!-- <bean name="/uploadfile.action" class="cn.pms.ssm.controller.UploadController" /> -->
	<!-- 文件上传 -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="52428800" />
		<property name="defaultEncoding" value="UTF-8" />
		<property name="resolveLazily" value="true" />
	</bean>

	<bean id="exceptionResolver"
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 遇到MaxUploadSizeExceededException异常时，自动跳转到/WEB-INF/jsp/error/error.jsp页面 -->
				<prop
					key="org.springframework.web.multipart.MaxUploadSizeExceededException">index</prop>
			</props>
		</property>
	</bean>
	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/WEB-INF/pages/html" />
		<property name="suffix" value=".jsp" />
		<property name="order" value="10"></property>
	</bean>
</beans>